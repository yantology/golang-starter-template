basePath: /api/v1
definitions:
  auth.DataResponse-auth_jwtResponseData:
    properties:
      data:
        $ref: '#/definitions/auth.jwtResponseData'
      message:
        type: string
    type: object
  auth.ForgetPasswordRequest:
    properties:
      activation_code:
        type: string
      email:
        type: string
      new_password:
        type: string
      new_password_confirmation:
        type: string
    required:
    - activation_code
    - email
    - new_password
    - new_password_confirmation
    type: object
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.MessageResponse:
    properties:
      message:
        type: string
    type: object
  auth.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  auth.RegisterRequest:
    properties:
      activation_code:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
    required:
    - activation_code
    - email
    - fullname
    - password
    - password_confirmation
    type: object
  auth.TokenRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.jwtResponseData:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a retail management system server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Retail Pro API
  version: "1.0"
paths:
  /auth/forget-password:
    post:
      consumes:
      - application/json
      description: Reset user password using activation code
      parameters:
      - description: Password reset details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.ForgetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with message
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Reset password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with JWT tokens
          schema:
            $ref: '#/definitions/auth.DataResponse-auth_jwtResponseData'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: User login
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with new JWT tokens
          schema:
            $ref: '#/definitions/auth.DataResponse-auth_jwtResponseData'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Refresh token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with activation code
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success response with message
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "401":
          description: Unauthorized response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Register new user
      tags:
      - auth
  /auth/token/{type}:
    post:
      consumes:
      - application/json
      description: Request a token for registration or password reset
      parameters:
      - description: Token type (registration or forget-password)
        in: path
        name: type
        required: true
        type: string
      - description: Token request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with message
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "400":
          description: Bad request response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "404":
          description: Not found response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "409":
          description: Conflict response
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Request activation token
      tags:
      - auth
schemes:
- http
- https
swagger: "2.0"
